// RobotBuilder Version: 6.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.Command;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

import java.util.function.DoubleSupplier;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.drive.MecanumDrive;
import edu.wpi.first.wpilibj.motorcontrol.PWMVictorSPX;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class Drivetrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private PWMVictorSPX motorController1;
    private PWMVictorSPX motorController2;
    private PWMVictorSPX motorController3;
    private PWMVictorSPX motorController4;
    private MecanumDrive mecanumDrive1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    /**
    *
    */
    public Drivetrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        motorController1 = new PWMVictorSPX(0);
        addChild("Motor Controller 1", motorController1);
        motorController1.setInverted(false);

        motorController2 = new PWMVictorSPX(1);
        addChild("Motor Controller 2", motorController2);
        motorController2.setInverted(false);

        motorController3 = new PWMVictorSPX(2);
        addChild("Motor Controller 3", motorController3);
        motorController3.setInverted(false);

        motorController4 = new PWMVictorSPX(3);
        addChild("Motor Controller 4", motorController4);
        motorController4.setInverted(false);

        mecanumDrive1 = new MecanumDrive(motorController1, motorController2,
                motorController3, motorController4);
        addChild("Mecanum Drive 1", mecanumDrive1);
        mecanumDrive1.setSafetyEnabled(true);
        mecanumDrive1.setExpiration(0.1);
        mecanumDrive1.setMaxOutput(1.0);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    public Command mecanumDriveCommand(DoubleSupplier xaxis, DoubleSupplier yaxis, DoubleSupplier zaxis) {
        return run(() -> mecanumDrive1.driveCartesian(xaxis.getAsDouble(), yaxis.getAsDouble(), zaxis.getAsDouble()));
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run
    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}
